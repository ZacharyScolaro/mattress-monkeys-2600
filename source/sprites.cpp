#include "sprites.h"

const uint8_t ScoreSpritesGraphics[128*8] = { 0x3c, 0x18, 0x3c, 0x3c, 0x16, 0x7e, 0x3c, 0x7e, 0x3c, 0x3c, 0x18, 0x7c, 0x3e, 0x7c, 0x7e, 0x7e, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x18, 0x6c, 0x00, 0x08, 0x00, 0x38, 0x60, 0x0c, 0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x3c, 0x18, 0x3c, 0x3c, 0x16, 0x7e, 0x3c, 0x7e, 0x3c, 0x3c, 0x00, 0x00, 0x0c, 0x00, 0x60, 0x3c, 0x3c, 0x18, 0x7c, 0x3e, 0x7c, 0x7e, 0x7e, 0x3e, 0x62, 0x3c, 0x3e, 0x62, 0x60, 0x62, 0x62, 0x3c, 0x7c, 0x3c, 0x7c, 0x3c, 0x7e, 0x62, 0x62, 0x62, 0x62, 0x62, 0x7e, 0x38, 0x40, 0x1c, 0x18, 0x00, 0x30, 0x00, 0x60, 0x00, 0x06, 0x00, 0x1c, 0x00, 0x60, 0x18, 0x0c, 0x60, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x10, 0x30, 0x00, 0xff, 0x62, 0x38, 0x46, 0x46, 0x26, 0x60, 0x62, 0x46, 0x62, 0x46, 0x2c, 0x62, 0x60, 0x62, 0x60, 0x60, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x18, 0x6c, 0x34, 0x3e, 0x66, 0x64, 0x60, 0x18, 0x18, 0x08, 0x18, 0x60, 0x00, 0x00, 0x02, 0x62, 0x38, 0x46, 0x46, 0x26, 0x60, 0x62, 0x46, 0x62, 0x46, 0x00, 0x00, 0x18, 0x00, 0x30, 0x46, 0x66, 0x2c, 0x62, 0x60, 0x62, 0x60, 0x60, 0x60, 0x62, 0x18, 0x0c, 0x64, 0x60, 0x76, 0x72, 0x62, 0x62, 0x62, 0x62, 0x62, 0x18, 0x62, 0x62, 0x62, 0x62, 0x62, 0x06, 0x30, 0x20, 0x0c, 0x34, 0x00, 0x18, 0x00, 0x60, 0x00, 0x06, 0x00, 0x32, 0x00, 0x60, 0x00, 0x00, 0x60, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x08, 0x00, 0xff, 0x66, 0x18, 0x06, 0x06, 0x46, 0x7c, 0x60, 0x06, 0x62, 0x46, 0x46, 0x62, 0x60, 0x62, 0x60, 0x60, 0x00, 0x44, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x18, 0x00, 0x7e, 0x70, 0x0c, 0x38, 0x00, 0x30, 0x0c, 0x3e, 0x18, 0x00, 0x00, 0x00, 0x04, 0x66, 0x18, 0x06, 0x06, 0x46, 0x7c, 0x60, 0x06, 0x62, 0x46, 0x18, 0x18, 0x30, 0x7c, 0x18, 0x06, 0x6a, 0x46, 0x62, 0x60, 0x62, 0x60, 0x60, 0x60, 0x62, 0x18, 0x0c, 0x68, 0x60, 0x6a, 0x6a, 0x62, 0x62, 0x62, 0x62, 0x60, 0x18, 0x62, 0x62, 0x62, 0x34, 0x62, 0x0c, 0x30, 0x10, 0x0c, 0x00, 0x00, 0x00, 0x3c, 0x7c, 0x3e, 0x3e, 0x3c, 0x30, 0x3e, 0x7c, 0x78, 0x0c, 0x62, 0x18, 0x7e, 0x7c, 0x3c, 0x3c, 0x3e, 0x6e, 0x3e, 0x7e, 0x46, 0x46, 0x61, 0x46, 0x46, 0x7e, 0x10, 0x10, 0x08, 0x00, 0xff, 0x6a, 0x18, 0x3c, 0x1c, 0x7f, 0x02, 0x7c, 0x0c, 0x3c, 0x3e, 0x46, 0x7c, 0x60, 0x62, 0x7c, 0x7c, 0x00, 0x28, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x18, 0x00, 0x34, 0x3e, 0x18, 0x6e, 0x00, 0x30, 0x0c, 0x08, 0x7e, 0x00, 0x7e, 0x00, 0x08, 0x6a, 0x18, 0x3c, 0x1c, 0x7f, 0x02, 0x7c, 0x0c, 0x3c, 0x3e, 0x00, 0x00, 0x60, 0x00, 0x0c, 0x1c, 0x6e, 0x46, 0x7c, 0x60, 0x62, 0x7c, 0x7c, 0x66, 0x7e, 0x18, 0x0c, 0x70, 0x60, 0x62, 0x66, 0x62, 0x7c, 0x62, 0x7c, 0x3c, 0x18, 0x62, 0x34, 0x62, 0x18, 0x3c, 0x18, 0x30, 0x08, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x62, 0x60, 0x46, 0x62, 0x78, 0x46, 0x62, 0x18, 0x0c, 0x64, 0x18, 0x65, 0x62, 0x62, 0x62, 0x46, 0x70, 0x60, 0x18, 0x46, 0x46, 0x61, 0x2c, 0x46, 0x0c, 0x20, 0x10, 0x04, 0x32, 0xff, 0x72, 0x18, 0x60, 0x06, 0x06, 0x02, 0x62, 0x18, 0x62, 0x06, 0x7e, 0x62, 0x60, 0x62, 0x60, 0x60, 0x00, 0x10, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x18, 0x00, 0x7e, 0x07, 0x30, 0x64, 0x00, 0x30, 0x0c, 0x14, 0x18, 0x00, 0x00, 0x00, 0x10, 0x72, 0x18, 0x60, 0x06, 0x06, 0x02, 0x62, 0x18, 0x62, 0x06, 0x00, 0x00, 0x30, 0x7c, 0x18, 0x18, 0x60, 0x7e, 0x62, 0x60, 0x62, 0x60, 0x60, 0x62, 0x62, 0x18, 0x0c, 0x68, 0x60, 0x62, 0x62, 0x62, 0x60, 0x62, 0x62, 0x06, 0x18, 0x62, 0x34, 0x6a, 0x34, 0x18, 0x30, 0x30, 0x04, 0x0c, 0x00, 0x00, 0x00, 0x3e, 0x62, 0x60, 0x46, 0x6c, 0x30, 0x46, 0x62, 0x18, 0x0c, 0x7c, 0x18, 0x65, 0x62, 0x62, 0x62, 0x46, 0x60, 0x7e, 0x18, 0x46, 0x46, 0x65, 0x18, 0x26, 0x18, 0x10, 0x10, 0x08, 0x4c, 0xff, 0x62, 0x18, 0x60, 0x46, 0x06, 0x42, 0x62, 0x30, 0x62, 0x46, 0x46, 0x62, 0x60, 0x62, 0x60, 0x60, 0x00, 0x28, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x34, 0x3e, 0x66, 0x62, 0x00, 0x18, 0x18, 0x22, 0x18, 0x00, 0x00, 0x60, 0x20, 0x62, 0x18, 0x60, 0x46, 0x06, 0x42, 0x62, 0x30, 0x62, 0x46, 0x18, 0x18, 0x18, 0x00, 0x30, 0x00, 0x62, 0x46, 0x62, 0x60, 0x62, 0x60, 0x60, 0x62, 0x62, 0x18, 0x4c, 0x64, 0x60, 0x62, 0x62, 0x62, 0x60, 0x66, 0x62, 0x46, 0x18, 0x62, 0x18, 0x76, 0x62, 0x18, 0x60, 0x30, 0x02, 0x0c, 0x00, 0x00, 0x00, 0x46, 0x62, 0x60, 0x46, 0x71, 0x30, 0x3e, 0x62, 0x18, 0x0c, 0x62, 0x18, 0x61, 0x62, 0x62, 0x7c, 0x3e, 0x60, 0x06, 0x18, 0x46, 0x2c, 0x65, 0x34, 0x1e, 0x30, 0x10, 0x10, 0x08, 0x00, 0xff, 0x3c, 0x3c, 0x7e, 0x3c, 0x06, 0x3c, 0x3c, 0x30, 0x3c, 0x3c, 0x46, 0x7c, 0x3e, 0x7c, 0x7e, 0x60, 0x00, 0x44, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x18, 0x00, 0x00, 0x08, 0x00, 0x3c, 0x00, 0x0c, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x3c, 0x3c, 0x7e, 0x3c, 0x06, 0x3c, 0x3c, 0x30, 0x3c, 0x3c, 0x00, 0x18, 0x0c, 0x00, 0x60, 0x18, 0x3c, 0x46, 0x7c, 0x3e, 0x7c, 0x7e, 0x60, 0x3e, 0x62, 0x3c, 0x38, 0x62, 0x7e, 0x62, 0x62, 0x3c, 0x60, 0x3f, 0x62, 0x3c, 0x18, 0x3c, 0x18, 0x62, 0x62, 0x18, 0x7e, 0x38, 0x01, 0x1c, 0x00, 0x00, 0x00, 0x3b, 0x7c, 0x3e, 0x3e, 0x3e, 0x30, 0x06, 0x62, 0x7e, 0x4c, 0x62, 0x18, 0x61, 0x62, 0x3c, 0x60, 0x06, 0x60, 0x7c, 0x18, 0x3e, 0x18, 0x7e, 0x62, 0x0c, 0x7e, 0x0c, 0x10, 0x30, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff };

const uint8_t GameOverGraphics[6*23] = { 0x00, 0x1f, 0x19, 0xff, 0xfc, 0x00, 0x00, 0x20, 0xa5, 0x11, 0x04, 0x00, 0x00, 0x40, 0xa5, 0x11, 0x04, 0x00, 0x00, 0x4f, 0xc3, 0x01, 0x3c, 0x00, 0x00, 0x4f, 0x81, 0x01, 0x08, 0x00, 0x00, 0x48, 0x99, 0x01, 0x08, 0x00, 0x00, 0x4c, 0x81, 0x29, 0x3c, 0x00, 0x00, 0x4c, 0x81, 0x29, 0x04, 0x00, 0x00, 0x40, 0x99, 0x39, 0x04, 0x00, 0x00, 0x20, 0x99, 0x39, 0x04, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x20, 0xcc, 0x82, 0x08, 0x00, 0x00, 0x40, 0x4c, 0x82, 0x04, 0x00, 0x00, 0x4e, 0x4c, 0x9e, 0x64, 0x00, 0x00, 0x4e, 0x4c, 0x86, 0x64, 0x00, 0x00, 0x4e, 0x40, 0x86, 0x04, 0x00, 0x00, 0x4e, 0x61, 0x9e, 0x08, 0x00, 0x00, 0x4e, 0x61, 0x82, 0x44, 0x00, 0x00, 0x40, 0x52, 0x82, 0x64, 0x00, 0x00, 0x20, 0x92, 0x82, 0x64, 0x00, 0x00, 0x1f, 0x0c, 0xff, 0xfc, 0x00 };

const uint8_t TitleArtGraphics[2][138] = { 
{ 0x00, 0x0c, 0x07, 0x80, 0xf0, 0x1c, 0x3b, 0x8c, 0xf7, 0xbc, 0xf3, 0xbc, 0x3b, 0x9e, 0xf7, 0xbe, 0xc7, 0xb0, 0x3f, 0x9e, 0xf3, 0x36, 0xc6, 0x30, 0x3f, 0x92, 0x63, 0x36, 0xe6, 0x3c, 0x3f, 0xbf, 0x63, 0x3e, 0xe7, 0xbc, 0x3f, 0xbf, 0x63, 0x3c, 0xc7, 0x8c, 0x35, 0xb3, 0x63, 0x36, 0xc1, 0x8c, 0x35, 0xb3, 0x63, 0x36, 0xf1, 0xbc, 0x31, 0xb3, 0x63, 0x36, 0xf7, 0xb8, 0x31, 0x80, 0x60, 0x36, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0xd8, 0x19, 0x80, 0x3b, 0xbf, 0x66, 0xdb, 0xd9, 0x9c, 0x3b, 0xbf, 0x66, 0xfb, 0xd9, 0xbc, 0x3f, 0xb3, 0x76, 0xfb, 0x19, 0xb0, 0x3f, 0xb3, 0x76, 0xf3, 0x1f, 0xb0, 0x3f, 0xb3, 0x7e, 0xf3, 0x8f, 0x3c, 0x3f, 0xb3, 0x7e, 0xfb, 0x86, 0x3c, 0x35, 0xbf, 0x6e, 0xfb, 0x06, 0x0c, 0x35, 0xbf, 0x6e, 0xdb, 0x06, 0x0c, 0x31, 0x9e, 0x66, 0xdb, 0xc6, 0x3c, 0x31, 0x80, 0x66, 0x03, 0xc0, 0x38 },

{ 0x3b, 0x80, 0xf0, 0x3c, 0x03, 0x80, 0x3b, 0x8c, 0xf7, 0xbe, 0xf7, 0x9c, 0x3f, 0x8c, 0xf7, 0xb6, 0xf6, 0x3c, 0x3f, 0x9e, 0x67, 0xb6, 0xc6, 0x30, 0x3f, 0x9e, 0x63, 0x3e, 0xc7, 0xb0, 0x3f, 0x92, 0x63, 0x3c, 0xe7, 0xbc, 0x35, 0xbf, 0x63, 0x36, 0xe1, 0xbc, 0x35, 0xbf, 0x63, 0x36, 0xc1, 0x8c, 0x31, 0xb3, 0x63, 0x36, 0xc7, 0x8c, 0x31, 0xb3, 0x63, 0x36, 0xf7, 0x3c, 0x00, 0x33, 0x03, 0x00, 0xf0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x80, 0x66, 0x03, 0xc0, 0x1c, 0x3b, 0x9e, 0x66, 0xdb, 0xd9, 0xbc, 0x3f, 0xbf, 0x76, 0xdb, 0x19, 0xb0, 0x3f, 0xbf, 0x76, 0xfb, 0x19, 0xb0, 0x3f, 0xb3, 0x7e, 0xfb, 0x99, 0xbc, 0x3f, 0xb3, 0x7e, 0xf3, 0x9f, 0xbc, 0x35, 0xb3, 0x6e, 0xf3, 0x0f, 0x0c, 0x35, 0xb3, 0x6e, 0xfb, 0x06, 0x0c, 0x31, 0xbf, 0x66, 0xfb, 0xc6, 0x3c, 0x31, 0xbf, 0x66, 0xdb, 0xc6, 0x38, 0x00, 0x1e, 0x00, 0xd8, 0x06, 0x00 }
 };

const uint8_t TitleArtColu[2][138] = { 
{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e }
 };

const uint8_t MenuOptionsGraphics[5][30] = { 
{ 0x21, 0xc3, 0xa3, 0xab, 0xbb, 0x84, 0x41, 0x42, 0xa2, 0xaa, 0x2a, 0x02, 0x81, 0x43, 0xa3, 0x93, 0xb3, 0x81, 0x41, 0x42, 0x22, 0x92, 0x28, 0x82, 0x21, 0xc2, 0x3a, 0x93, 0xab, 0x84 },

{ 0x20, 0x60, 0xe8, 0xea, 0xee, 0x04, 0x40, 0x20, 0xa8, 0xaa, 0x8a, 0x02, 0x80, 0x20, 0xe8, 0xe4, 0xec, 0x01, 0x40, 0x20, 0x88, 0xa4, 0x8a, 0x02, 0x20, 0x70, 0x8e, 0xa4, 0xea, 0x04 },

{ 0x21, 0xc3, 0xa3, 0xab, 0xbb, 0x84, 0x40, 0x42, 0xa2, 0xaa, 0x2a, 0x02, 0x81, 0xc3, 0xa3, 0x93, 0xb3, 0x81, 0x41, 0x02, 0x22, 0x92, 0x28, 0x82, 0x21, 0xc2, 0x3a, 0x93, 0xab, 0x84 },

{ 0x20, 0x0e, 0xee, 0xcb, 0xb8, 0x04, 0x40, 0x08, 0xa8, 0xa9, 0x20, 0x02, 0x80, 0x08, 0xce, 0xa9, 0x38, 0x01, 0x40, 0x08, 0xa8, 0xa9, 0x08, 0x02, 0x20, 0x0e, 0xae, 0xc9, 0x38, 0x04 },

{ 0x20, 0x77, 0x75, 0x5d, 0x57, 0x04, 0x40, 0x55, 0x45, 0x51, 0x54, 0x02, 0x80, 0x76, 0x75, 0x5d, 0x57, 0x01, 0x40, 0x45, 0x45, 0x50, 0xa1, 0x02, 0x20, 0x45, 0x72, 0x5c, 0xa7, 0x04 }
 };

const uint8_t MenuOptionsColu[5][30] = { 
{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e }
 };

const uint8_t FanBladeGraphics[7][14] = { 
{ 0x80, 0x00, 0xc0, 0x00, 0xe0, 0x00, 0xfb, 0xe0, 0x00, 0xe0, 0x00, 0x60, 0x00, 0x20 },

{ 0x00, 0x00, 0x20, 0x00, 0x30, 0x00, 0x3b, 0x80, 0x01, 0x80, 0x00, 0x80, 0x00, 0x00 },

{ 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x1b, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x00, 0x80, 0x01, 0x80, 0x3b, 0x80, 0x30, 0x00, 0x20, 0x00, 0x00, 0x00 },

{ 0x00, 0x20, 0x00, 0x60, 0x00, 0xe0, 0xfb, 0xe0, 0xe0, 0x00, 0xc0, 0x00, 0x80, 0x00 }
 };

const uint8_t FanBladeColu[7][14] = { 
{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00 },

{ 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00 },

{ 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00 },

{ 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00 },

{ 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00 },

{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e }
 };

const uint8_t FanChasisGraphics[20] = { 0xff, 0xff, 0x7e, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0xff, 0xff, 0x18, 0xff, 0xff, 0xff, 0x7e, 0x7e, 0x3c, 0x18 };

const uint8_t FanChasisColu[20] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x1e, 0x1e, 0x1e };

const uint8_t MonkeyGraphics[12][12] = { 
{ 0xe0, 0xf1, 0xe2, 0xd2, 0x39, 0x7d, 0x5d, 0x9e, 0xbc, 0xb0, 0x88, 0x58 },

{ 0x01, 0xe2, 0xf2, 0xe1, 0xd9, 0x3d, 0x3e, 0x5c, 0x5c, 0x93, 0x85, 0x0c },

{ 0x08, 0x04, 0xe4, 0xf4, 0xe9, 0xd2, 0x39, 0x7e, 0xbc, 0x96, 0x9b, 0x49 },

{ 0x1c, 0x1e, 0x1c, 0x18, 0x04, 0x7c, 0x1c, 0x6c, 0x1e, 0x35, 0x49, 0x12 },

{ 0x38, 0x7c, 0x38, 0xba, 0x92, 0x6c, 0x38, 0x38, 0x38, 0x38, 0x44, 0x44 },

{ 0x22, 0x12, 0x16, 0x5c, 0xdc, 0xec, 0xec, 0xec, 0xdc, 0x54, 0x16, 0x12 },

{ 0xc6, 0x44, 0x44, 0x38, 0x38, 0x38, 0x38, 0x6c, 0x92, 0xba, 0x38, 0x7c },

{ 0x44, 0x48, 0x68, 0x2a, 0x3b, 0x37, 0x37, 0x37, 0x3b, 0x3a, 0x68, 0x48 },

{ 0x1c, 0x1e, 0x5c, 0x58, 0x26, 0x1d, 0x1d, 0x7c, 0x9a, 0x32, 0x42, 0x04 },

{ 0x09, 0x12, 0x54, 0xdc, 0xde, 0xee, 0xee, 0xe5, 0x15, 0x14, 0x22, 0x02 },

{ 0x22, 0x44, 0x49, 0x5e, 0x38, 0xb8, 0xb8, 0x64, 0x1a, 0x3a, 0x78, 0x38 },

{ 0x40, 0x44, 0x28, 0xa8, 0xa7, 0x77, 0x77, 0x7b, 0x3b, 0x2a, 0x48, 0x90 }
 };

const uint8_t MonkeyColu[12][12] = { 
{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 },

{ 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32 }
 };

const uint8_t BonusBananaGraphics[13] = { 0x20, 0x30, 0x30, 0x18, 0x18, 0x18, 0x3c, 0x5a, 0x1a, 0x38, 0x30, 0x70, 0x60 };

const uint8_t BonusBananaColu[13] = { 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e };

const uint8_t HeadBoardWideGraphics[200] = { 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x01, 0xc0, 0xff, 0x81, 0xc0, 0x01, 0xc1, 0xff, 0xc1, 0xc0, 0x01, 0xe1, 0xff, 0xc3, 0xc0, 0x01, 0xe3, 0xff, 0xe3, 0xc0, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0x80 };

const uint8_t HeadBoardWideColu[200] = { 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c };

const uint8_t HeadBoardMediumGraphics[200] = { 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x30, 0xff, 0x86, 0x00, 0x00, 0x30, 0xff, 0x86, 0x00, 0x00, 0x39, 0xff, 0xce, 0x00, 0x00, 0x39, 0xff, 0xce, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00 };

const uint8_t HeadBoardMediumColu[200] = { 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c };

const uint8_t HeadBoardNarrowGraphics[200] = { 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00 };

const uint8_t HeadBoardNarrowColu[200] = { 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c };

const uint8_t MonkeyHandOpenGraphics[136] = { 0x10, 0x10, 0x10, 0x50, 0x50, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x54, 0x34, 0x34, 0x34, 0x34, 0x3c, 0x3d, 0x3d, 0x3d, 0x3d, 0x3d, 0x3f, 0x3e, 0x3e, 0x3e, 0x3e, 0x3e, 0x3c, 0x3c, 0xbc, 0xbc, 0xbc, 0xbc, 0xfc, 0xfc, 0xfc, 0xfc, 0x7c, 0x7c, 0x7c, 0x7c, 0x3c, 0x3c, 0x3c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70 };

const uint8_t MonkeyHandOpenColu[136] = { 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };

const uint8_t MonkeyHandClosedGraphics[136] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x38, 0x38, 0x38, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x0c, 0x0c, 0x60, 0x60, 0x6c, 0x6c, 0x6c, 0x6c, 0x5c, 0x5c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x3c, 0x3c, 0x3c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70 };

const uint8_t MonkeyHandClosedColu[136] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };

const uint8_t BubbleGraphics[7][15] = { 
{ 0x3c, 0x3c, 0x42, 0x42, 0x89, 0x8d, 0x85, 0x81, 0xa1, 0x81, 0x91, 0x42, 0x42, 0x3c, 0x3c },

{ 0x00, 0x00, 0x18, 0x3c, 0x24, 0x4a, 0x4a, 0x42, 0x42, 0x52, 0x24, 0x3c, 0x18, 0x00, 0x00 },

{ 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x34, 0x34, 0x2c, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x00, 0x00, 0x24, 0x10, 0x00, 0x00, 0x08, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x08, 0x4a, 0x20, 0x00, 0x02, 0x40, 0x00, 0x04, 0x52, 0x10, 0x00, 0x00, 0x00 },

{ 0x08, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x10 },

{ 0x00, 0x00, 0xf0, 0x80, 0x86, 0xe9, 0x19, 0x19, 0x19, 0x99, 0x69, 0x09, 0x06, 0x00, 0x00 }
 };

const uint8_t BubbleColu[7][15] = { 
{ 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e },

{ 0x00, 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00, 0x00 },

{ 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x00, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x0e, 0x0e, 0x0e, 0x00, 0x0e, 0x0e, 0x00, 0x0e, 0x0e, 0x0e, 0x00, 0x00, 0x00 },

{ 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e },

{ 0x00, 0x00, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x00, 0x00 }
 };

const uint8_t FlyGraphics[2][11] = { 
{ 0xd0, 0xb8, 0x98, 0x7c, 0x3f, 0x3e, 0x7e, 0x7f, 0x3c, 0x22, 0x40 },

{ 0x00, 0x00, 0xe0, 0xf8, 0x3f, 0x3e, 0x7e, 0x7f, 0x3c, 0x22, 0x40 }
 };

const uint8_t FlyColu[2][11] = { 
{ 0x0e, 0x0e, 0x0e, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },

{ 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
 };

const uint8_t kernel_7800[549] = {
0xa9, 0x19, 0x85, 0x2c, 0xa9, 0x00, 0x85, 0x30, 0x85, 0x24, 0xa5, 0x28, 0x10, 0xfa, 0xae, 0xfc,
0x18, 0xae, 0xfd, 0x18, 0xae, 0xfe, 0x18, 0xae, 0xff, 0x18, 0xae, 0xdc, 0xf7, 0xe0, 0x25, 0xd0,
0x04, 0x85, 0x3c, 0x85, 0x24, 0xa9, 0x40, 0x85, 0x3c, 0x85, 0x24, 0xa5, 0x28, 0x30, 0xfa, 0x4c,
0x08, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x25, 0x25, 0x25, 0x25,
0x0f, 0x18, 0xfa, 0x08, 0x18, 0xfa, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07,
0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a,
0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00,
0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07,
0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x07, 0x1a, 0x00, 0x0f, 0x18,
0xfa, 0x0f, 0x18, 0xfa, 0x0f, 0x18, 0xfa, 0x0f, 0x18, 0xfa, 0x0f, 0x18, 0xfa, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xc0, 0x40, 0xf0, 0x0c, 0x00, 0xc0, 0x40, 0xf0, 0x0c, 0x50, 0xc0, 0x40, 0xf0, 0x0c, 0x50, 0xc0,
0xc0, 0xf0, 0x80, 0x00, 0xc0, 0xc0, 0xf0, 0x80, 0x40, 0xc0, 0xc0, 0xf0, 0x90, 0x80, 0xc0, 0xc0,
0xf0, 0x90, 0x80, 0x00, 0x00};

const track_t SongMonkeys =
{
	.channels = { {(sequence_t[]){{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=4 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=11 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=18 },
{ .goto_index=-1, .pattern_index=4 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=6 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=11 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=13 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=10 },
{ .goto_index=-1, .pattern_index=15 },
{ .goto_index=-1, .pattern_index=15 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=9 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=16 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=22 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=22 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=22 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=20 },
{ .goto_index=-1, .pattern_index=33 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=33 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=33 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=33 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=29 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=1 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=25 },
{ .goto_index=-1, .pattern_index=31 },
{ .goto_index=-1, .pattern_index=31 },
{ .goto_index=-1, .pattern_index=31 },
{ .goto_index=-1, .pattern_index=31 },
{ .goto_index=0, .pattern_index=11 }}}, {(sequence_t[]){{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=7 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=2 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=3 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=5 },
{ .goto_index=-1, .pattern_index=8 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=7 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=2 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=3 },
{ .goto_index=-1, .pattern_index=0 },
{ .goto_index=-1, .pattern_index=5 },
{ .goto_index=-1, .pattern_index=8 },
{ .goto_index=-1, .pattern_index=14 },
{ .goto_index=-1, .pattern_index=17 },
{ .goto_index=-1, .pattern_index=19 },
{ .goto_index=-1, .pattern_index=21 },
{ .goto_index=-1, .pattern_index=19 },
{ .goto_index=-1, .pattern_index=23 },
{ .goto_index=-1, .pattern_index=19 },
{ .goto_index=-1, .pattern_index=21 },
{ .goto_index=-1, .pattern_index=19 },
{ .goto_index=-1, .pattern_index=24 },
{ .goto_index=-1, .pattern_index=26 },
{ .goto_index=-1, .pattern_index=27 },
{ .goto_index=-1, .pattern_index=26 },
{ .goto_index=-1, .pattern_index=28 },
{ .goto_index=-1, .pattern_index=26 },
{ .goto_index=-1, .pattern_index=27 },
{ .goto_index=-1, .pattern_index=26 },
{ .goto_index=-1, .pattern_index=28 },
{ .goto_index=-1, .pattern_index=30 },
{ .goto_index=0, .pattern_index=32 }}} },
	.instruments = (instrument_t[]){   {
   // Quick note
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 2, 4, 8, 7, 6, 5, 3, 1, 1, 0, 0 },
   .sustainStart = 10,
   .releaseStart = 11,
   .waveform = 4,
   .length = 12
},
   {
   // Quick note
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 2, 4, 8, 7, 6, 5, 3, 1, 1, 0, 0 },
   .sustainStart = 10,
   .releaseStart = 11,
   .waveform = 12,
   .length = 12
},
   {
   // Long rise note
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 2, 4, 7, 8, 8, 8, 0, 0, 0 },
   .sustainStart = 8,
   .releaseStart = 9,
   .waveform = 4,
   .length = 10
},
   {
   // Long rise note
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 2, 4, 7, 8, 8, 8, 0, 0, 0 },
   .sustainStart = 8,
   .releaseStart = 9,
   .waveform = 12,
   .length = 10
},
   {
   // Medium length note
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 4, 6, 8, 8, 8, 7, 6, 5, 5, 5, 4, 4, 3, 2, 2, 1, 0, 0 },
   .sustainStart = 16,
   .releaseStart = 17,
   .waveform = 4,
   .length = 19
},
   {
   // Raspy bass
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 1, 2, 2, 2, 2, 4, 2, 1, 0, 0 },
   .sustainStart = 9,
   .releaseStart = 10,
   .waveform = 7,
   .length = 11
},
   {
   // Tuba Monkey
   .frequencies = (int8_t[]) { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
   .volumes = (uint8_t[]) { 0, 3, 5, 7, 8, 8, 7, 2, 0, 0, 0, 0, 0 },
   .sustainStart = 11,
   .releaseStart = 12,
   .waveform = 6,
   .length = 13
}},
	.percussions = (percussion_t[]){},
	.patterns = (pattern_t[]){   {
   // Melody Motif
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x33, 0x08, 0x08, 0x10, 0x32, 0x10, 0x31, 0x08,
0x08, 0x08, 0x32, 0x08, 0x08, 0x00 }
},
   {
   // bass 1
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xee, 0x08, 0xcb, 0x10, 0xf4, 0x08, 0xcb, 0x10,
0x00 }
},
   {
   // Melody 2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x33, 0x10, 0x2b, 0x08, 0x08, 0x08, 0x2f,
0x08, 0xae, 0x08, 0x08, 0x10, 0x8c, 0x08, 0x8f,
0x10, 0x91, 0x08, 0x00 }
},
   {
   // melody3
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x37, 0x08, 0x34, 0x08, 0x33, 0x08, 0x38,
0x08, 0xb7, 0x08, 0x10, 0x08, 0x9a, 0x08, 0x97,
0x08, 0x08, 0x08, 0x00 }
},
   {
   // bass 1 end
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xee, 0x08, 0xee, 0x08, 0xed, 0x08, 0xeb, 0x08,
0x00 }
},
   {
   // melody 4
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x33, 0x08, 0x35, 0x10, 0x37, 0x08, 0x3a,
0x10, 0xbd, 0x08, 0x08, 0x10, 0x08, 0x08, 0x08,
0x08, 0x08, 0x08, 0x08, 0x08, 0x00 }
},
   {
   // bass 2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xf6, 0x08, 0xc8, 0x10, 0xee, 0x08, 0xc8, 0x10,
0x00 }
},
   {
   // Melody 1
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x10, 0x34, 0x10, 0x33, 0x08, 0x08, 0x08, 0x38,
0x08, 0xb7, 0x08, 0x08, 0x10, 0x9a, 0x10, 0x97,
0x08, 0x08, 0x08, 0x00 }
},
   {
   // melody B1
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x08, 0x31, 0x08, 0x10, 0x08, 0x31, 0x08,
0x10, 0x08, 0x08, 0x08, 0x32, 0x08, 0x31, 0x08,
0x32, 0x08, 0x31, 0x08, 0xae, 0x08, 0x6e, 0x10,
0x6f, 0x10, 0x71, 0x10, 0x73, 0x08, 0x08, 0x08,
0x08, 0x08, 0x33, 0x08, 0x08, 0x08, 0x33, 0x08,
0x08, 0x08, 0x08, 0x08, 0x34, 0x08, 0x33, 0x08,
0x34, 0x08, 0x33, 0x08, 0xae, 0x08, 0x6e, 0x08,
0x6f, 0x08, 0x71, 0x08, 0x73, 0x08, 0x08, 0x08,
0x08, 0x08, 0x31, 0x08, 0x08, 0x08, 0x31, 0x08,
0x08, 0x08, 0x08, 0x08, 0x32, 0x08, 0x31, 0x08,
0x32, 0x08, 0x31, 0x08, 0xac, 0x08, 0x6c, 0x08,
0x6e, 0x08, 0x6f, 0x08, 0x71, 0x08, 0x94, 0x08,
0x93, 0x08, 0x92, 0x08, 0x91, 0x08, 0x8f, 0x08,
0x8e, 0x08, 0x8c, 0x08, 0x7f, 0x08, 0x7d, 0x08,
0x7f, 0x08, 0x8b, 0x08, 0x8c, 0x08, 0x8e, 0x08,
0x8f, 0x08, 0x91, 0x08, 0x93, 0x08, 0x00 }
},
   {
   // bass 3
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xeb, 0x08, 0xc9, 0x10, 0xee, 0x08, 0xc9, 0x10,
0x00 }
},
   {
   // bass 4
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xed, 0x08, 0xca, 0x10, 0xf1, 0x08, 0xca, 0x10,
0x00 }
},
   {
   // Harmony L
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x5a, 0x08, 0x57, 0x08, 0x55, 0x08, 0x54, 0x08,
0x53, 0x08, 0x51, 0x08, 0x4f, 0x08, 0x4e, 0x08,
0x4f, 0x08, 0x51, 0x08, 0x53, 0x08, 0x54, 0x08,
0x57, 0x08, 0x5a, 0x08, 0x5d, 0x08, 0x5f, 0x08,
0x00 }
},
   {
   // 1
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
0x00 }
},
   {
   // bass 5
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xfc, 0x08, 0xcc, 0x10, 0xf2, 0x08, 0xcc, 0x10,
0xfc, 0x08, 0xcc, 0x10, 0xf2, 0x08, 0xcc, 0x10,
0x00 }
},
   {
   // TA melody 1
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xb3, 0x08, 0x08, 0x10, 0x08, 0x08, 0x34, 0x08,
0x35, 0x08, 0x37, 0x08, 0x38, 0x08, 0x3a, 0x08,
0xb2, 0x08, 0x08, 0x08, 0x10, 0x08, 0x33, 0x08,
0x34, 0x08, 0x35, 0x08, 0x37, 0x08, 0x38, 0x08,
0xb1, 0x08, 0x08, 0x08, 0x10, 0x08, 0x32, 0x08,
0x33, 0x08, 0x34, 0x08, 0x35, 0x08, 0x37, 0x08,
0xb0, 0x08, 0x08, 0x08, 0x73, 0x08, 0x08, 0x08,
0x78, 0x08, 0x08, 0x08, 0x73, 0x08, 0x08, 0x08,
0xb0, 0x08, 0x08, 0x08, 0x10, 0x08, 0x31, 0x08,
0x32, 0x08, 0x33, 0x08, 0x34, 0x08, 0x35, 0x08,
0xaf, 0x08, 0x08, 0x08, 0x10, 0x08, 0x30, 0x08,
0x31, 0x08, 0x32, 0x08, 0x33, 0x08, 0x34, 0x08,
0xae, 0x08, 0x08, 0x08, 0x10, 0x08, 0x2f, 0x08,
0x30, 0x08, 0x31, 0x08, 0x32, 0x08, 0x33, 0x08,
0xad, 0x08, 0x08, 0x08, 0x08, 0x08, 0x4a, 0x08,
0x3b, 0x00 }
},
   {
   // bass 6
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xf9, 0x08, 0xc9, 0x10, 0xf0, 0x08, 0xc9, 0x10,
0xf9, 0x08, 0xc9, 0x10, 0xf0, 0x08, 0xc9, 0x10,
0x00 }
},
   {
   // Harmony L2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x4a, 0x08, 0x08, 0x08, 0x08, 0x08, 0x4d, 0x08,
0x4a, 0x08, 0x08, 0x08, 0x08, 0x08, 0x4d, 0x08,
0x4a, 0x08, 0x08, 0x08, 0x08, 0x08, 0x4d, 0x08,
0x4a, 0x08, 0x08, 0x08, 0x08, 0x08, 0x4d, 0x08,
0x4a, 0x08, 0x4d, 0x08, 0x4a, 0x08, 0x4d, 0x08,
0x4a, 0x08, 0x4d, 0x08, 0x4a, 0x08, 0x4d, 0x08,
0x4a, 0x08, 0x4a, 0x08, 0x4a, 0x08, 0x4a, 0x08,
0x4a, 0x08, 0x4a, 0x08, 0x4a, 0x08, 0x8a, 0x08,
0x00 }
},
   {
   // TA Melody 2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x08, 0x08, 0x08, 0x08, 0x4a, 0x08, 0x3b,
0x08, 0x08, 0x08, 0x08, 0x08, 0x4a, 0x08, 0x3b,
0x08, 0x08, 0x08, 0x08, 0x08, 0x4a, 0x08, 0x3b,
0x08, 0x4a, 0x08, 0x3b, 0x08, 0x4a, 0x08, 0x3b,
0x08, 0x4a, 0x08, 0x3b, 0x08, 0x4a, 0x08, 0x7b,
0x08, 0x7b, 0x08, 0x7a, 0x08, 0x7a, 0x08, 0x78,
0x08, 0x78, 0x08, 0x75, 0x08, 0x75, 0x08, 0x00 }
},
   {
   // bass1a
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xfe, 0x08, 0xce, 0x10, 0xf4, 0x08, 0xc9, 0x10,
0x00 }
},
   {
   // Melody Motif2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x3b, 0x08, 0x08, 0x10, 0x3a, 0x10, 0x38, 0x08,
0x08, 0x08, 0x3a, 0x08, 0x08, 0x00 }
},
   {
   // bass 1 B
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xf5, 0x08, 0xca, 0x10, 0xfc, 0x08, 0xce, 0x10,
0x00 }
},
   {
   // Melody 1B
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x10, 0x3d, 0x10, 0x3b, 0x08, 0x08, 0x08, 0x4b,
0x08, 0x4a, 0x08, 0x08, 0x10, 0x92, 0x10, 0x90,
0x08, 0x08, 0x08, 0x00 }
},
   {
   // Bass 1 B rise
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xfc, 0x08, 0xfc, 0x08, 0xf9, 0x08, 0xf6, 0x08,
0x00 }
},
   {
   // Melody 2b
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x3b, 0x10, 0xb0, 0x08, 0x08, 0x08, 0x35,
0x08, 0xb8, 0x08, 0x08, 0x10, 0x92, 0x08, 0x95,
0x10, 0x98, 0x08, 0x00 }
},
   {
   // Melody 2ba
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x3b, 0x10, 0xb0, 0x08, 0x08, 0x08, 0x35,
0x08, 0xb8, 0x08, 0x08, 0x10, 0x92, 0x08, 0x90,
0x10, 0x8e, 0x08, 0x00 }
},
   {
   // Bass 1C
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xf4, 0x08, 0xc9, 0x08, 0xfb, 0x08, 0xcd, 0x10,
0x00 }
},
   {
   // Melody Motif3
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x3a, 0x08, 0x08, 0x10, 0x38, 0x10, 0x37, 0x08,
0x08, 0x08, 0x38, 0x08, 0x08, 0x00 }
},
   {
   // Melody 1C
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x10, 0x3b, 0x10, 0x3a, 0x08, 0x08, 0x08, 0x30,
0x08, 0x2f, 0x08, 0x08, 0x10, 0x91, 0x10, 0x8f,
0x08, 0x08, 0x08, 0x00 }
},
   {
   // Melody 2Ca
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x3a, 0x10, 0xaf, 0x08, 0x08, 0x08, 0x35,
0x08, 0x38, 0x08, 0x08, 0x10, 0x7a, 0x08, 0x7f,
0x10, 0x8b, 0x08, 0x00 }
},
   {
   // Bass 1C Rise 2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xf4, 0x08, 0xf4, 0x08, 0xf1, 0x08, 0xef, 0x08,
0x00 }
},
   {
   // melody B2
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x08, 0x08, 0x08, 0x08, 0x37, 0x08, 0x08, 0x08,
0x37, 0x08, 0x08, 0x08, 0xb7, 0x08, 0x10, 0x08,
0x37, 0x08, 0x38, 0x08, 0x37, 0x08, 0x73, 0x10,
0x73, 0x10, 0x74, 0x10, 0x77, 0x08, 0x7a, 0x08,
0x08, 0x08, 0x08, 0x08, 0x3a, 0x08, 0x08, 0x08,
0xba, 0x08, 0x10, 0x08, 0x3a, 0x08, 0x08, 0x08,
0x3a, 0x08, 0x3b, 0x08, 0x3a, 0x08, 0xb3, 0x08,
0x73, 0x08, 0x74, 0x08, 0x77, 0x08, 0x7a, 0x08,
0x08, 0x08, 0x08, 0x08, 0x37, 0x08, 0x08, 0x08,
0x37, 0x10, 0x31, 0x08, 0xa8, 0x08, 0x38, 0x08,
0x37, 0x08, 0x38, 0x08, 0x37, 0x08, 0xb1, 0x08,
0x71, 0x08, 0x73, 0x08, 0x74, 0x08, 0x77, 0x08,
0x00 }
},
   {
   // Bass 7
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xf1, 0x08, 0xc8, 0x10, 0xf8, 0x08, 0xcb, 0x10,
0x00 }
},
   {
   // Harmony R
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0x94, 0x08, 0x93, 0x08, 0x92, 0x08, 0x91, 0x08,
0x8f, 0x08, 0x8e, 0x08, 0x8c, 0x08, 0x7f, 0x08,
0x7d, 0x08, 0x7f, 0x08, 0x8b, 0x08, 0x8c, 0x08,
0x8e, 0x08, 0x8f, 0x08, 0x91, 0x08, 0x93, 0x08,
0x00 }
},
   {
   // Bass 1 Ba rise
   .even_speed = 6,
   .odd_speed = 6,
   .notes = (uint8_t[]) { 0xfb, 0x08, 0xfb, 0x08, 0xf8, 0x08, 0xf5, 0x08,
0x00 }
}}
};


const track_t SfxBounce =
{
	.channels = { {0}, {(sequence_t[]){ { .goto_index=-1, .pattern_index=0 } }} },
	.instruments = (instrument_t[]){0},
	.percussions = (percussion_t[]){   {
   // New Bounce
   .frequencies = (uint8_t[]) { 10, 12, 10, 8, 6, 6, 8, 10, 12, 12, 11, 9, 7, 4, 2, 1 },
   .volumes = (uint8_t[]) { 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 8, 6, 4, 2, 0 },
   .waveforms = (uint8_t[]) { 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
   .length = 16
}},
	.patterns = (pattern_t[]){   {
   // SFX
   .even_speed = 16,
   .odd_speed = 16,
   .notes = (uint8_t[]) { 0x11, 0x00 }
}}
};


const track_t SfxBonus =
{
	.channels = { {0}, {(sequence_t[]){ { .goto_index=-1, .pattern_index=0 } }} },
	.instruments = (instrument_t[]){0},
	.percussions = (percussion_t[]){   {
   // Bonus Banana
   .frequencies = (uint8_t[]) { 23, 23, 23, 23, 17, 17, 17, 17, 17, 11, 11, 11, 11, 11, 11, 11 },
   .volumes = (uint8_t[]) { 0, 6, 9, 10, 10, 10, 10, 10, 10, 10, 9, 5, 3, 2, 1, 0 },
   .waveforms = (uint8_t[]) { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 },
   .length = 16
}},
	.patterns = (pattern_t[]){   {
   // SFX
   .even_speed = 16,
   .odd_speed = 16,
   .notes = (uint8_t[]) { 0x11, 0x00 }
}}
};


const track_t SfxFly =
{
	.channels = { {0}, {(sequence_t[]){ { .goto_index=-1, .pattern_index=0 } }} },
	.instruments = (instrument_t[]){0},
	.percussions = (percussion_t[]){   {
   // Fly Caught
   .frequencies = (uint8_t[]) { 22, 22, 20, 15, 6, 5, 6, 7, 6, 5, 6, 7, 6, 5, 6, 7 },
   .volumes = (uint8_t[]) { 0, 7, 10, 10, 10, 10, 10, 9, 7, 5, 3, 2, 1, 1, 1, 0 },
   .waveforms = (uint8_t[]) { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 },
   .length = 16
}},
	.patterns = (pattern_t[]){   {
   // SFX
   .even_speed = 16,
   .odd_speed = 16,
   .notes = (uint8_t[]) { 0x11, 0x00 }
}}
};


const track_t SfxFan =
{
	.channels = { {0}, {(sequence_t[]){ { .goto_index=-1, .pattern_index=0 } }} },
	.instruments = (instrument_t[]){0},
	.percussions = (percussion_t[]){   {
   // Fan Whack
   .frequencies = (uint8_t[]) { 31, 31, 23, 2, 0, 0, 1, 0, 0, 1, 2, 4, 7, 8, 9, 12 },
   .volumes = (uint8_t[]) { 12, 8, 10, 11, 12, 10, 10, 10, 9, 8, 8, 8, 8, 7, 5, 0 },
   .waveforms = (uint8_t[]) { 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8 },
   .length = 16
}},
	.patterns = (pattern_t[]){   {
   // SFX
   .even_speed = 16,
   .odd_speed = 16,
   .notes = (uint8_t[]) { 0x11, 0x00 }
}}
};

const int32_t Sine[256] = { 0, 1608, 3215, 4821, 6423, 8022, 9616, 11204, 12785, 14359, 15923, 17479, 19024, 20557, 22078, 23586, 25079, 26557, 28020, 29465, 30893, 32302, 33692, 35061, 36409, 37736, 39039, 40319, 41575, 42806, 44011, 45189, 46340, 47464, 48558, 49624, 50660, 51665, 52639, 53581, 54491, 55368, 56212, 57022, 57797, 58538, 59243, 59913, 60547, 61144, 61705, 62228, 62714, 63162, 63571, 63943, 64276, 64571, 64826, 65043, 65220, 65358, 65457, 65516, 65536, 65516, 65457, 65358, 65220, 65043, 64826, 64571, 64276, 63943, 63571, 63162, 62714, 62228, 61705, 61144, 60547, 59913, 59243, 58538, 57797, 57022, 56212, 55368, 54491, 53581, 52639, 51665, 50660, 49624, 48558, 47464, 46340, 45189, 44011, 42806, 41575, 40319, 39039, 37736, 36409, 35061, 33692, 32302, 30893, 29465, 28020, 26557, 25079, 23586, 22078, 20557, 19024, 17479, 15923, 14359, 12785, 11204, 9616, 8022, 6423, 4821, 3215, 1608, 0, -1608, -3215, -4821, -6423, -8022, -9616, -11204, -12785, -14359, -15923, -17479, -19024, -20557, -22078, -23586, -25079, -26557, -28020, -29465, -30893, -32302, -33692, -35061, -36409, -37736, -39039, -40319, -41575, -42806, -44011, -45189, -46340, -47464, -48558, -49624, -50660, -51665, -52639, -53581, -54491, -55368, -56212, -57022, -57797, -58538, -59243, -59913, -60547, -61144, -61705, -62228, -62714, -63162, -63571, -63943, -64276, -64571, -64826, -65043, -65220, -65358, -65457, -65516, -65536, -65516, -65457, -65358, -65220, -65043, -64826, -64571, -64276, -63943, -63571, -63162, -62714, -62228, -61705, -61144, -60547, -59913, -59243, -58538, -57797, -57022, -56212, -55368, -54491, -53581, -52639, -51665, -50660, -49624, -48558, -47464, -46340, -45189, -44011, -42806, -41575, -40319, -39039, -37736, -36409, -35061, -33692, -32302, -30893, -29465, -28020, -26557, -25079, -23586, -22078, -20557, -19024, -17479, -15923, -14359, -12785, -11204, -9616, -8022, -6423, -4821, -3215, -1608 };